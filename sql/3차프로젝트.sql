DROP TABLE CUSTOMERS;
DROP TABLE CATEGORY;
DROP TABLE PRODUCTS;
DROP TABLE ORDER_REQUESTS;
DROP TABLE PAYMENTS;
DROP TABLE ORDERS;




INSERT INTO CUSTOMERS(
	CUSTOMER_NAME
	,CUSTOMER_ADDR
	,CUSTOMER_TEL
	,CUSTOMER_EMAIL
	,CUSTOMER_OWNER 
	,BUSINESS_NUMBER 
) VALUES(
	'부산병원'
	,'부산광역시 부산진구 개금동 34-1'
	,'051-123-0191'
	,'busanhospital@gmail.com'
	,'김부산'
	,'124-1034-1'
);

INSERT INTO CATEGORY(
	CATE_NAME
) VALUES(
	'의약품'
);


INSERT INTO PRODUCTS(
	PRODUCT_NAME
	,CATE_NUM
	,PRODUCT_PRICE
	,STOCK
	,DETAIL
) VALUES(
	'경동아스피린장용정'
	,1
	,2000
	,300
	,'심혈관질환 및 혈전 예방약'
);

INSERT INTO ORDER_REQUESTS(
	PRODUCT_NUM
	,QUANTITY
	,CUSTOMER_NUM
) VALUES(
	1
	,30
	,1
);

INSERT INTO PAYMENTS(
	REQUEST_NUM
	,AMOUNT
	,PAYMENT_METHOD
	,PAYMENT_STATUS
) VALUES(
	1
	,60000
	,'CASH'
	,'Completed'
);

INSERT INTO ORDERS(
	REQUEST_NUM
) VALUES(
	1
);




SELECT * FROM CUSTOMERS;
SELECT * FROM CATEGORY;
SELECT * FROM PRODUCTS;
SELECT * FROM ORDER_REQUESTS;
SELECT * FROM PAYMENTS;
SELECT * FROM ORDERS;

SELECT REQUEST_NUM, PRODUCT_NAME, QUANTITY, REQUEST_STATUS, REQUEST_DATE
FROM ORDER_REQUESTS O , PRODUCTS P
WHERE O.PRODUCT_NUM = P.PRODUCT_NUM;

SELECT O.ORDER_NUM, R.REQUEST_NUM, C.CUSTOMER_NAME, C.CUSTOMER_TEL, O.ORDER_STATUS
FROM ORDERS O , ORDER_REQUESTS R, CUSTOMERS C
WHERE R.CUSTOMER_NUM = C.CUSTOMER_NUM;



-- 거래처
CREATE TABLE CUSTOMERS(
	CUSTOMER_NUM INT AUTO_INCREMENT PRIMARY KEY
	, CUSTOMER_NAME VARCHAR(100) NOT NULL UNIQUE
	, CUSTOMER_OWNER VARCHAR(50) NOT NULL 
	, BUSINESS_NUMBER VARCHAR(100) NOT NULL
	, CUSTOMER_ADDR VARCHAR(200) NOT NULL
	, CUSTOMER_TEL VARCHAR(50) NOT NULL
	, CUSTOMER_EMAIL VARCHAR(50) UNIQUE
);

-- 카테고리
CREATE TABLE CATEGORY(
	CATE_NUM INT AUTO_INCREMENT PRIMARY KEY
	, CATE_NAME VARCHAR(100) NOT NULL UNIQUE
);

-- 상품정보
CREATE TABLE PRODUCTS(
	PRODUCT_NUM INT AUTO_INCREMENT PRIMARY KEY
	, PRODUCT_NAME VARCHAR(100) NOT NULL 
	, CATE_NUM INT REFERENCES CATEGORY(CATE_NUM) ON DELETE CASCADE
	, PRODUCT_PRICE INT NOT NULL
	, STOCK INT NOT NULL 
	, DETAIL VARCHAR(300)
);


-- 발주
CREATE TABLE ORDER_REQUESTS(
 REQUEST_NUM INT AUTO_INCREMENT PRIMARY KEY
 , PRODUCT_NUM INT REFERENCES PRODUCTS(PRODUCT_NUM) ON DELETE CASCADE
 , CUSTOMER_NUM INT REFERENCES CUSTOMERS(CUSTOMER_NUM) ON DELETE CASCADE
 , QUANTITY INT NOT NULL
 , REQUEST_STATUS ENUM('Pending', 'Completed', 'Cancelled') NOT NULL DEFAULT 'Pending'
 , REQUEST_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);


-- 결제
CREATE TABLE PAYMENTS(
 PAYMENT_NUM INT AUTO_INCREMENT PRIMARY KEY
 , REQUEST_NUM INT REFERENCES ORDER_REQUESTS(REQUEST_NUM) ON DELETE CASCADE
 , PAYMENT_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
 , AMOUNT INT NOT NULL 
 , PAYMENT_METHOD VARCHAR(100) NOT NULL 
 , PAYMENT_STATUS ENUM('Pending', 'Completed', 'Failed') NOT NULL DEFAULT 'Pending'
);

-- 수주 테이블
CREATE TABLE ORDERS(
 ORDER_NUM INT AUTO_INCREMENT PRIMARY KEY
 , REQUEST_NUM INT REFERENCES ORDER_REQUESTS(REQUEST_NUM) ON DELETE CASCADE
 , ORDER_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
 , ORDER_STATUS ENUM('Pending', 'Shipped', 'Delivered', 'Cancelled') NOT NULL DEFAULT 'Pending'
);