
-- 쇼핑몰 프로젝트 테이블 정의
-- 1: 회원 정보 테이블
-- 2: 상품 카테고리 테이블
-- 3: 상품 정보 테이블
-- 4: 상품 이미지 정보 테이블
-- 5: 장바구니 정보 테이블
-- 6: 구매 정보 테이블

SHOW CREATE TABLE ANSWER_SHOP_CART;


-- 1) 회원 정보 테이블
-- 권한정보 : USER, ADMIN 
CREATE TABLE ANSWER_SHOP_MEMBER(
	MEM_ID VARCHAR(50) PRIMARY KEY
	, MEM_PW VARCHAR(100) NOT NULL
	, MEM_NAME VARCHAR(50) NOT NULL
	, MEM_TEL VARCHAR(30) UNIQUE
	, POST VARCHAR(10)
	, MEM_ADDR VARCHAR(50) 
	, ADDR_DETAIL VARCHAR(100)
	, MEM_EMAIL VARCHAR(100)
	, MEM_ROLE VARCHAR(30) DEFAULT 'USER'
);

SELECT * FROM answer_shop_member;

-- 2) 상품 카테고리 테이블
CREATE TABLE ANSWER_ITEM_CATEGORY (
	CATE_CODE INT AUTO_INCREMENT PRIMARY KEY
	,CATE_NAME VARCHAR(50) NOT NULL UNIQUE 
);

INSERT INTO ANSWER_ITEM_CATEGORY VALUES (1, '인터넷/IT');
INSERT INTO ANSWER_ITEM_CATEGORY VALUES (2, '소설/에세이');
INSERT INTO ANSWER_ITEM_CATEGORY VALUES (3, '자기계발');


-- 3) 상품 정보 테이블
-- ITEM_STATUS (상품 상태) : FOR_SALE(판매중) , SOLD_OUT(매진) 
CREATE TABLE ANSWER_SHOP_ITEM (
	ITEM_CODE INT AUTO_INCREMENT PRIMARY KEY
	,ITEM_NAME VARCHAR(50) NOT NULL UNIQUE
	,ITEM_PRICE INT NOT NULL 
	,ITEM_INTRO VARCHAR(100) 
	,ITEM_STOCK INT DEFAULT 20
	,ITEM_STATUS VARCHAR(10) DEFAULT 'FOR_SALE'
	,CATE_CODE INT NOT NULL REFERENCES ITEM_CATEGORY(CATE_CODE)
);


-- 4) 상품 이미지 정보 테이블
-- ORIJIN FILE : 원본 파일명
-- ATTACHED FILE : 첨부된 파일명 
-- IS_MAIN : 대표 이미지 여부 
CREATE TABLE ANSWER_ITEM_IMG (
	IMG_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ORIGIN_FILE_NAME VARCHAR(100) NOT NULL
	, ATTACHED_FILE_NAME VARCHAR(100) NOT NULL
	, IS_MAIN VARCHAR(5) NOT NULL
	, ITEM_CODE INT NOT NULL REFERENCES answer_shop_item(ITEM_CODE) ON DELETE CASCADE
);

SELECT * FROM answer_item_img;
SELECT * FROM ANSWER_SHOP_CART;

SELECT ATTACHED_FILE_NAME 
FROM answer_item_img
WHERE IS_MAIN = 'Y'
AND ITEM_CODE = 9;

-- 5) 장바구니 정보 테이블

CREATE TABLE ANSWER_SHOP_CART(
	CART_CODE INT AUTO_INCREMENT PRIMARY KEY
	, CART_CNT INT NOT NULL 
	, ITEM_CODE INT NOT NULL REFERENCES answer_shop_item(ITEM_CODE)
	, MEM_ID VARCHAR(50) NOT NULL REFERENCES answer_shop_member(MEM_ID)
	, CART_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);


SELECT * FROM answer_shop_cart;


SELECT ITEM_CODE FROM answer_shop_cart 
WHERE MEM_ID = 'koya'
AND ITEM_CODE = 10;

UPDATE answer_shop_cart SET
CART_CNT = CART_CNT+1
WHERE ITEM_CODE= 9
AND MEM_ID = 'koya';

DELETE FROM answer_shop_cart;


-- ---------장바구니 관련 쿼리 ---------------

-- 장바구니 목록 테이블 조회
SELECT IMG.ATTACHED_FILE_NAME, ITEM_NAME , ITEM_PRICE ,CART_CNT, CART_DATE , CART_CODE , C.ITEM_CODE,CART_CODE
FROM answer_item_img IMG , answer_shop_item I, ANSWER_SHOP_CART C , answer_shop_member M
WHERE C.ITEM_CODE = I.ITEM_CODE 
AND C.MEM_ID = M.MEM_ID 
AND IMG.ITEM_CODE = C.ITEM_CODE
AND IMG.IS_MAIN = 'Y'  
AND C.MEM_ID = 'mang';


-- 장바구니 수량 변경
UPDATE answer_shop_cart
SET CART_CNT = '2'
WHERE ITEM_CODE = 9
AND MEM_ID = 'koya';


-- 장바구니 삭제
DELETE FROM answer_shop_cart
WHERE CART_CODE = 9;



SELECT DATE_FORMAT(CART_DATE, '%Y년%m월%d일') FROM answer_shop_cart;




-- ==========연습=============


-- 현재 저장된 ITEM_CODE의 가장 큰 값 조회 한 후 +1
SELECT MAX(ITEM_CODE)+1 FROM answer_shop_item;


-- 연습용 테이블
CREATE TABLE TEST_SHOP_ITEM(
	ITEM_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ITEM_NAME VARCHAR(50)
);

INSERT INTO TEST_SHOP_ITEM(ITEM_NAME) VALUES('TEST ITEM NAME');
INSERT INTO TEST_SHOP_ITEM(ITEM_NAME) VALUES('TEST ITEM NAME111');

SELECT * FROM answer_shop_member;

-- AUTO_INCREMENT는 직접 넣으면 직접 넣은 수로 저장된다.
INSERT INTO TEST_SHOP_ITEM(ITEM_CODE, ITEM_NAME) VALUES( 3 ,'TEST ITEM NAME');

-- TEST 테이블의 ITEM_CODE의 가장 큰 값에 + 1   ==> 이것을 다음에 INSERT할 ITEM_CODE의 번호로 지정
SELECT MAX(ITEM_CODE)+1 FROM TEST_SHOP_ITEM;
-- 위의 코드만으로는 오류가 발생할 수 있다.
-- 오류의 예 ) DATE가 없을 경우 MAX의 값은 NULL이 나온다!
DELETE FROM TEST_SHOP_ITEM;


-- NULL은 데이터가 정해지지 않은 것을 의미하므로 +1을 해도 NULL이 나온다.
-- 연습) 데이터가 하나도 없다면 1을 조회
-- IFNULL(expr1,expr2)  expr1 : NULL인지 판단할 컬럼 ,  expr2: NULL인 경우 최환값
SELECT IFNULL(MAX(ITEM_CODE), 1) FROM TEST_SHOP_ITEM;


-- 그렇다면 해당 프로그램에서 MAX(ITEM_CODE)+1가  NULL일 때 '0'으로 치환 
-- NULL이 아니라면 MAX(ITEM_CODE) +1 
SELECT IFNULL(MAX(ITEM_CODE)+1, 0) +1 FROM TEST_SHOP_ITEM; 





mediclick