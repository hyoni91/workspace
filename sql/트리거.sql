

-- 트리거를 사용하여 발주 테이블에 주문이 들어오면 수주테이블에 자동 저장

DROP TRIGGER order_orderRequest_update;


CREATE TRIGGER AFTER_INSERT_ORDER_REQUESTS
AFTER INSERT ON ORDER_REQUESTS
FOR EACH ROW
   INSERT INTO ORDERS (REQUEST_NUM, ORDER_STATUS, ORDER_DATE)
   VALUES (new.REQUEST_NUM, '배송대기', NOW());

	

-- 트리거 UPDATE 주문취소 (거래처>공급사)			
DELIMITER //			
			
CREATE TRIGGER order_orderRequest_update			
	AFTER UPDATE		
	ON ORDER_REQUESTS		
	FOR EACH ROW		
BEGIN			
	IF NEW.REQUEST_STATUS='주문취소' THEN		
		UPDATE orders	
		SET ORDER_STATUS='주문취소'	
		WHERE REQUEST_NUM=NEW.REQUEST_NUM;	
	END IF;		
END; //			
			
DELIMITER;			
order_orderRequest_update_cancel


DROP TRIGGER AFTER_INSERT_PRODUCTS;


-- 최초 재고 등록
CREATE TRIGGER AFTER_INSERT_PRODUCTS
AFTER INSERT ON PRODUCTS
FOR EACH ROW
INSERT INTO inventory (
 CATE_NUM, 
 PRODUCT_NUM, 
 PRODUCT_NAME, 
 STOCK_DATE,
 INITIAL_STOCK, 
 INCOMING_QTY, 
 OUTGOING_QTY, 
 CURRENT_STOCK
) VALUES (
 NEW.CATE_NUM,          
 NEW.PRODUCT_NUM,       
 NEW.PRODUCT_NAME,      
 NOW(),           
 NEW.STOCK,             
 NEW.STOCK,             
 0,                     
 NEW.STOCK              
);



DELIMITER //

CREATE TRIGGER order_orderRequest_update_ing
AFTER UPDATE
ON ORDERS
FOR EACH ROW
BEGIN
END; //

DELIMITER ;




-- 트리거 UPDATE 배송완료 (공급사>거래처)
DELIMITER //

CREATE TRIGGER order_orderRequest_update_cancel
AFTER UPDATE
ON ORDERS
FOR EACH ROW
BEGIN
	IF NEW.ORDER_STATUS = '배송완료' THEN
		UPDATE order_requests 
		SET REQUEST_STATUS = '배송완료'
		WHERE REQUEST_NUM = NEW.REQUEST_NUM;
	END IF;
END; //

DELIMITER ;


DROP TRIGGER order_orderRequest_update_ing;

DELIMITER //

CREATE TRIGGER order_orderRequest_update_ing
AFTER UPDATE
ON ORDERS
FOR EACH ROW
BEGIN
	IF NEW.ORDER_STATUS = '배송중' THEN
		UPDATE order_requests 
		SET REQUEST_STATUS = '배송중'
		WHERE REQUEST_NUM = NEW.REQUEST_NUM;
	END IF;
END; //

DELIMITER ;

