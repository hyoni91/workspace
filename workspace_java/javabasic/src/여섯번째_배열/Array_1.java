package 여섯번째_배열;

/*
    배열(Array)★참조자료형!
    자료형이 같은 다수의 변수를 효율적으로 관리하기위한 자료형
    우리가 아는 모든 자료형은 배열 가능

    [배열의 선언 및 생성]  --
    int[] arr;  정수를 담을 수 있는 이름이 arr인 배열을 선언
    arr = new int[5];  배열의 생성(★★배열은 초기화라 부르지 않는다★★)

    정수형 배열은 '0'으로 초기화, 실수형 배열은 '0.0'으로초기화, 문자열 배열은 'null' 로 초기화  -->>> 공간생성과 동시에 초기화
*/


public class Array_1 {
    public static void main(String[] args) {

        int n ; //변수의 선언
        n = 1 ; //변수의 초기화
        n = 2; //변수의 초기화 아님!

        int n2 = 3; //변수의 선언 및 초기화 동시에


        //정수를 여러개 저장할 수 있는 배열을 선언
        int[] arr1;   //  '[]'  --> int 와 int[] 는 자료형이 다름

        //문자를 여러개 저장할 수 있는 배열 선언
        String [] name;  //--> String 과 String[]는 자료형이 다름

        //실수를 여러개 저장할 수 있는 배열
        double[] arr2; // --> 마찬가지로 double 과 double[]는 자료형이 다름


        //배열 선언 후, 배열의 생성
        arr1 = new int[3]; // 정수(int) 3개를 저장할 공간을 생성
        name = new String[5]; //문자열 5개를 저장할 공간 생성
        arr2 = new double[10]; //실수 10개를 저장할 공간 생성



        //배열 출력
        System.out.println(arr1);  // 배열명을 출력하면 이상한 값이 출력됨  . 클래스를 배워야해용


        //배열의 선언 및 생성을 동시에
        int[] arr4 = new int[5];  //정수 5개를 저장할 수 있는 배열 arr4를 선언 및 생성
       // 위의 문장을 통해 배열arr4는 정수를 저장할 수 있는 공간 5개를 생성한다.
    // 또한, 생성된 공간 5개를 모두 '0' 으로 초기화 한다.

        //실수를 2개 저장할 수 있는 배열 arr5를 생성
        double[] arr5 = new double[2];



    }
}
